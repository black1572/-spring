package com.text.main;import com.text.Service.UserService;import com.text.dao.MysqlUserDao;import com.text.dao.UserDao;import com.text.entity.User;import com.text.spring.JDBCDataSource;import org.junit.jupiter.api.Test;import org.springframework.context.ApplicationContext;import org.springframework.context.support.ClassPathXmlApplicationContext;import org.springframework.jdbc.core.BeanPropertyRowMapper;import org.springframework.jdbc.core.JdbcTemplate;import java.util.List;public class Mytest {    // 模拟一个 UserDAO 对象    @Test    public void testJdbc() {        ApplicationContext applicationContext = new ClassPathXmlApplicationContext("applicationContext.xml");        JdbcTemplate jdbcTemplate = applicationContext.getBean("jdbcTemplate", JdbcTemplate.class);        System.out.println(jdbcTemplate);    }    @Test    public void testInsert() {        ApplicationContext applicationContext = new ClassPathXmlApplicationContext("applicationContext.xml");        JdbcTemplate jdbcTemplate = applicationContext.getBean("jdbcTemplate", JdbcTemplate.class);        String sql = "insert into user(name,pwd) value(?,?)";        int count = jdbcTemplate.update(sql, "王五", 20234);        System.out.println(count);    }    @Test    public void testUpdate() {        ApplicationContext applicationContext = new ClassPathXmlApplicationContext("applicationContext.xml");        JdbcTemplate jdbcTemplate = applicationContext.getBean("jdbcTemplate", JdbcTemplate.class);        String sql = "update user set name = ? , pwd = ? where id = ?";        int count = jdbcTemplate.update(sql, "Timi", 42352, 2);        System.out.println(count);    }    @Test    public void testDelete() {        ApplicationContext applicationContext = new ClassPathXmlApplicationContext("applicationContext.xml");        JdbcTemplate jdbcTemplate = applicationContext.getBean("jdbcTemplate", JdbcTemplate.class);        String sql = "delete  from user where id = ?";        int count = jdbcTemplate.update(sql, 6);        System.out.println(count);    }    @Test    public void testQueryOne() {        ApplicationContext applicationContext = new ClassPathXmlApplicationContext("applicationContext.xml");        JdbcTemplate jdbcTemplate = applicationContext.getBean("jdbcTemplate", JdbcTemplate.class);        String sql = "select id , name, pwd ,phone from user where id = ?";        User user = jdbcTemplate.queryForObject(sql, new BeanPropertyRowMapper<>(User.class), 2);        System.out.println(user);    }    @Test    public void testQuery() {        ApplicationContext applicationContext = new ClassPathXmlApplicationContext("applicationContext.xml");        JdbcTemplate jdbcTemplate = applicationContext.getBean("jdbcTemplate", JdbcTemplate.class);        String sql = "select id , name,pwd,phone from user";        List<User> users = jdbcTemplate.query(sql, new BeanPropertyRowMapper<>(User.class));        System.out.println(users);    }    @Test    public void testUser() {        ApplicationContext applicationContext = new ClassPathXmlApplicationContext("applicationContext.xml");        UserService userService = applicationContext.getBean("userService", UserService.class);        User IsLogin = userService.login("陈佳伟", "530");        if (IsLogin != null) {            System.out.println("登录成功，用户信息如下：\n" + IsLogin);        } else System.out.println(IsLogin + "\n登陆失败！查询不到指定用户信息.");    }    @Test    public void testUserService(){        String conf = "applicationContext.xml";        ApplicationContext ac = new ClassPathXmlApplicationContext(conf);        UserService userService = ac.getBean("userService",UserService.class);        System.out.println(userService);        UserDao dao = ac.getBean("userDao",UserDao.class);        System.out.println(dao);        System.out.println();        User user = userService.login("陈佳伟","530");        System.out.println(user);    }    @Test    public void testJdbcDataSource(){        String conf = "applicationContext.xml";        ApplicationContext ac = new ClassPathXmlApplicationContext(conf);        JDBCDataSource dataSource = ac.getBean("JDBCDataSource", JDBCDataSource.class);        System.out.println(dataSource);        MysqlUserDao userDao = ac.getBean("userDao",MysqlUserDao.class);        System.out.println(userDao);        System.out.println();        User user = userDao.findByName("陈佳伟");        System.out.println(user.toString());    }}